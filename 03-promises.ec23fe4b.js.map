{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAmCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,EA3CA,CACXQ,KAAMC,SAASC,cAAc,WAG1BF,KAAKG,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAEC,iBAEF,IAAIC,EAAQF,EAAEG,cAAcf,MAAMgB,cAClC,MAAMC,EAAOL,EAAEG,cAAcE,KAAKD,cAC5BE,EAASN,EAAEG,cAAcG,OAAOF,cAEtC,GAAIF,EAAQ,GAAKG,EAAO,GAAKC,GAAU,EACrCC,EAAAvB,GAASwB,OAAOC,QAAQ,iDAExB,IAAK,IAAIC,EAAW,EAAGA,GAAYJ,EAAQI,GAAY,EACrDxB,EAAcwB,EAAUR,GACrBS,MAAK,EAACxB,SAAEA,EAAQC,MAAEA,MACjBmB,EAAAvB,GAASwB,OAAOI,QACd,uBAAqBzB,QAAiBC,MAAU,IAGnDyB,OAAM,EAAC1B,SAAEA,EAAQC,MAAEA,MAClBmB,EAAAvB,GAASwB,OAAOC,QACd,sBAAoBtB,QAAeC,MAAU,IAGnDc,GAASG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n\n  let delay = e.currentTarget.delay.valueAsNumber;\n  const step = e.currentTarget.step.valueAsNumber;\n  const amount = e.currentTarget.amount.valueAsNumber;\n\n  if (delay < 0 || step < 0 || amount <= 0) {\n    Notiflix.Notify.failure(`Value of input fields cannot be negative`);\n  } else {\n    for (let position = 1; position <= amount; position += 1) {\n      createPromise(position, delay)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${delay}ms`\n          );\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${delay}ms`\n          );\n        });\n      delay += step;\n    }\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","form","document","querySelector","addEventListener","e","preventDefault","delay1","currentTarget","valueAsNumber","step","amount","$parcel$interopDefault","Notify","failure","position1","then","success","catch"],"version":3,"file":"03-promises.ec23fe4b.js.map"}